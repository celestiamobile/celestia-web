diff --git a/library.js b/library.js
new file mode 100644
index 00000000..37651210
--- /dev/null
+++ b/library.js
@@ -0,0 +1,9 @@
+addToLibrary({
+    celestiaLoadSuccess: function() {
+        loadSuccessCallback();
+    },
+    celestiaLoadFile: function(file, lenfile) {
+        const fileName = UTF8ToString(file, lenfile);
+        loadFileCallback(fileName);
+    },
+});
\ No newline at end of file
diff --git a/src/celestia/sdl/appwindow.cpp b/src/celestia/sdl/appwindow.cpp
index 5178a3b7..72b2c12e 100644
--- a/src/celestia/sdl/appwindow.cpp
+++ b/src/celestia/sdl/appwindow.cpp
@@ -25,18 +25,36 @@
 #endif
 
 #include <celestia/celestiacore.h>
+#include <celestia/progressnotifier.h>
 #include <celutil/gettext.h>
 #include <celutil/tzutil.h>
 #include "clipboard.h"
 #include "gui.h"
 #include "settings.h"
 
+extern "C" {
+    extern void celestiaLoadSuccess();
+    extern void celestiaLoadFile(const char *file, size_t lenfile);
+}
+
 namespace celestia::sdl
 {
 
 namespace
 {
 
+class CelestiaCoreProgressWatcher: public ProgressNotifier
+{
+public:
+    CelestiaCoreProgressWatcher() : ProgressNotifier() {}
+
+    void update(const std::string& status)
+    {
+        fmt::print("Loading: {}\n", status);
+        celestiaLoadFile(status.c_str(), status.size());
+    }
+};
+
 void
 setTimezone(CelestiaCore& appCore)
 {
@@ -129,7 +147,7 @@ mainRunLoopHandler(void* arg)
 {
     auto app = static_cast<AppWindow*>(arg);
     if (!app->update())
-        emscripten_cancel_main_loop()
+        emscripten_cancel_main_loop();
 }
 #endif
 
@@ -193,7 +211,8 @@ AppWindow::run(const Settings& settings)
     m_appCore = std::make_unique<CelestiaCore>();
     m_alerter = std::make_unique<Alerter>(m_window.get());
     m_appCore->setAlerter(m_alerter.get());
-    if (!m_appCore->initSimulation())
+    CelestiaCoreProgressWatcher progressWatcher;
+    if (!m_appCore->initSimulation("celestia.cfg", {}, &progressWatcher))
         return false;
 
     if (float screenDpi = 96.0f; SDL_GetDisplayDPI(0, &screenDpi, nullptr, nullptr) == 0)
@@ -211,6 +230,9 @@ AppWindow::run(const Settings& settings)
 
     m_appCore->start();
     setTimezone(*m_appCore);
+
+    celestiaLoadSuccess();
+
     SDL_GL_GetDrawableSize(m_window.get(), &m_width, &m_height);
     m_appCore->resize(m_width, m_height);
 
diff --git a/src/celestia/sdl/sdlmain.cpp b/src/celestia/sdl/sdlmain.cpp
index 75d63f06..7ebec9b7 100644
--- a/src/celestia/sdl/sdlmain.cpp
+++ b/src/celestia/sdl/sdlmain.cpp
@@ -25,9 +25,9 @@ main(int argc, char **argv)
     CelestiaCore::initLocale();
 
 #ifdef ENABLE_NLS
-    bindtextdomain("celestia", LOCALEDIR);
+    bindtextdomain("celestia", "locale");
     bind_textdomain_codeset("celestia", "UTF-8");
-    bindtextdomain("celestia-data", LOCALEDIR);
+    bindtextdomain("celestia-data", "locale");
     bind_textdomain_codeset("celestia", "UTF-8");
     textdomain("celestia");
 #endif
@@ -39,21 +39,6 @@ main(int argc, char **argv)
     if (!environment->setGLAttributes())
         return EXIT_FAILURE;
 
-    fs::path dataDir;
-#ifdef _WIN32
-    if (const wchar_t* dataDirEnv = _wgetenv(L"CELESTIA_DATA_DIR"); dataDirEnv == nullptr)
-#else
-    if (const char* dataDirEnv = std::getenv("CELESTIA_DATA_DIR"); dataDirEnv == nullptr)
-#endif
-        dataDir = CONFIG_DATA_DIR;
-    else
-        dataDir = dataDirEnv;
-
-    std::error_code ec;
-    fs::current_path(dataDir, ec);
-    if (ec)
-        return EXIT_FAILURE;
-
     Settings settings = Settings::load(environment->getSettingsPath());
 
     auto window = environment->createAppWindow(settings);
